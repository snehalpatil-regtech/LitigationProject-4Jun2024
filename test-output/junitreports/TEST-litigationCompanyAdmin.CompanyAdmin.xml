<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="TRPL-PUN-0115" failures="0" tests="235" name="litigationCompanyAdmin.CompanyAdmin" time="1244.152" errors="3" timestamp="2025-02-07T17:54:58 IST" skipped="221">
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeOpen" time="211.868"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Close" time="16.820">
    <error message="invalid session id: session deleted as the browser has closed the connection
from disconnected: not connected to DevTools
  (Session info: chrome=132.0.6834.160)
Build info: version: &#039;3.141.0&#039;, revision: &#039;2ecb7d9a&#039;, time: &#039;2018-10-31T20:09:30&#039;
System info: host: &#039;TRPL-PUN-0115&#039;, ip: &#039;172.18.64.1&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;23.0.1&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.160, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52528}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 59b1c2d81f2859aabf5dcfce81b3a6a4" type="org.openqa.selenium.NoSuchSessionException">
      <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id: session deleted as the browser has closed the connection
from disconnected: not connected to DevTools
  (Session info: chrome=132.0.6834.160)
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'TRPL-PUN-0115', ip: '172.18.64.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.160, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52528}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 59b1c2d81f2859aabf5dcfce81b3a6a4
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:442)
at litigationCompanyAdmin.CompanyAdmin.Close(CompanyAdmin.java:3698)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- Close -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeWithExistingData" time="62.759">
    <error message="element click intercepted: Element &lt;iframe id=&quot;showdetails&quot; src=&quot;../../Litigation/aspxPages/NoticeDetailPage.aspx?AccessID=0&quot; width=&quot;100%&quot; height=&quot;550px&quot; frameborder=&quot;0&quot; cd_frame_id_=&quot;b59508d2693c932803cd2907696b237e&quot;&gt;&lt;/iframe&gt; is not clickable at point (314, 472). Other element would receive the click: &lt;iframe src=&quot;about:blank&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; width=&quot;360px&quot; height=&quot;251px&quot; style=&quot;outline:none !important; visibility:visible !important; resize:none !important; box-shadow:none !important; overflow:visible !important; background:none !important; opacity:1 !important; filter:alpha(opacity=100) !important; -ms-filter:progid:DXImageTransform.Microsoft.Alpha(Opacity 1}) !important; -mz-opacity:1 !important; -khtml-opacity:1 !important; top:auto !important; right:auto !important; bottom:100px; left:20px !important; position:fixed !important; border:0 !important; min-height:251px !important; min-width:360px !important; max-height:251px !important; max-width:360px !important; padding:0 !important; margin:0 !important; -moz-transition-property:none !important; -webkit-transition-property:none !important; -o-transition-property:none !important; transition-property:none !important; transform:none !important; -webkit-transform:none !important; -ms-transform:none !important; width:360px !important; height:251px !important; display:block !important; z-index:auto !important; background-color:transparent !important; cursor:none !important; float:none !important; border-radius:unset !important; pointer-events:auto !important; clip:auto !important; color-scheme:light !important;&quot; id=&quot;odedcjj39lug1738930092427&quot; class=&quot;&quot; title=&quot;chat widget&quot;&gt;&lt;/iframe&gt;
  (Session info: chrome=132.0.6834.160)
Build info: version: &#039;3.141.0&#039;, revision: &#039;2ecb7d9a&#039;, time: &#039;2018-10-31T20:09:30&#039;
System info: host: &#039;TRPL-PUN-0115&#039;, ip: &#039;172.18.64.1&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;23.0.1&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.160, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50708}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d5a0ea7f9102b426e34dd104efd84166" type="org.openqa.selenium.ElementClickInterceptedException">
      <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <iframe id="showdetails" src="../../Litigation/aspxPages/NoticeDetailPage.aspx?AccessID=0" width="100%" height="550px" frameborder="0" cd_frame_id_="b59508d2693c932803cd2907696b237e"></iframe> is not clickable at point (314, 472). Other element would receive the click: <iframe src="about:blank" frameborder="0" scrolling="no" width="360px" height="251px" style="outline:none !important; visibility:visible !important; resize:none !important; box-shadow:none !important; overflow:visible !important; background:none !important; opacity:1 !important; filter:alpha(opacity=100) !important; -ms-filter:progid:DXImageTransform.Microsoft.Alpha(Opacity 1}) !important; -mz-opacity:1 !important; -khtml-opacity:1 !important; top:auto !important; right:auto !important; bottom:100px; left:20px !important; position:fixed !important; border:0 !important; min-height:251px !important; min-width:360px !important; max-height:251px !important; max-width:360px !important; padding:0 !important; margin:0 !important; -moz-transition-property:none !important; -webkit-transition-property:none !important; -o-transition-property:none !important; transition-property:none !important; transform:none !important; -webkit-transform:none !important; -ms-transform:none !important; width:360px !important; height:251px !important; display:block !important; z-index:auto !important; background-color:transparent !important; cursor:none !important; float:none !important; border-radius:unset !important; pointer-events:auto !important; clip:auto !important; color-scheme:light !important;" id="odedcjj39lug1738930092427" class="" title="chat widget"></iframe>
  (Session info: chrome=132.0.6834.160)
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'TRPL-PUN-0115', ip: '172.18.64.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.160, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50708}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d5a0ea7f9102b426e34dd104efd84166
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at litigationCompanyAdmin.MethodsPOM.selectOpponent(MethodsPOM.java:333)
at litigationCompanyAdmin.MethodsPOM.NoticeWithExistingData(MethodsPOM.java:17107)
at litigationCompanyAdmin.CompanyAdmin.NoticeWithExistingData(CompanyAdmin.java:110)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- NoticeWithExistingData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeWithInvalidData" time="139.963"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeWithTwoMandatoryData" time="55.857"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeWithEmptyFields" time="53.829"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeClearBtn" time="56.425"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeSendMailWithDoc" time="69.013"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeSendMailWithDocInvalidFields" time="67.840"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeSendMailWithDocEmptyFields" time="61.290"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeUserAssignmentDelete" time="42.228"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeClosed" time="66.176"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseOpen" time="257.469"/>
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseExistingData" time="82.615">
    <error message="no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=132.0.6834.160)
Build info: version: &#039;3.141.0&#039;, revision: &#039;2ecb7d9a&#039;, time: &#039;2018-10-31T20:09:30&#039;
System info: host: &#039;TRPL-PUN-0115&#039;, ip: &#039;172.18.64.1&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;23.0.1&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.160, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52528}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 59b1c2d81f2859aabf5dcfce81b3a6a4
*** Element info: {Using=xpath, value=//*[@id=&#039;tbxInternalCaseNo&#039;]}" type="org.openqa.selenium.NoSuchWindowException">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=132.0.6834.160)
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'TRPL-PUN-0115', ip: '172.18.64.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.160, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52528}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 59b1c2d81f2859aabf5dcfce81b3a6a4
*** Element info: {Using=xpath, value=//*[@id='tbxInternalCaseNo']}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at litigationAdditionalOwner.performerPOM.clickInternalCaseNo(performerPOM.java:658)
at litigationCompanyAdmin.MethodsPOM.clickInternalCaseNo(MethodsPOM.java:1726)
at litigationCompanyAdmin.MethodsPOM.CaseExistingData(MethodsPOM.java:19258)
at litigationCompanyAdmin.CompanyAdmin.CaseExistingData(CompanyAdmin.java:251)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- CaseExistingData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseWithInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseWithInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseWithTwoFieldsData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseWithTwoFieldsData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseWithEmptyFields" time="0.000">
    <skipped/>
  </testcase> <!-- CaseWithEmptyFields -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseWithClearBtn" time="0.000">
    <skipped/>
  </testcase> <!-- CaseWithClearBtn -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseClose" time="0.000">
    <skipped/>
  </testcase> <!-- CaseClose -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskOpen" time="0.000">
    <skipped/>
  </testcase> <!-- TaskOpen -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskwithExistingData" time="0.000">
    <skipped/>
  </testcase> <!-- TaskwithExistingData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskwithTwoManadatoryFields" time="0.000">
    <skipped/>
  </testcase> <!-- TaskwithTwoManadatoryFields -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskwithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- TaskwithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskwithClearBtn" time="0.000">
    <skipped/>
  </testcase> <!-- TaskwithClearBtn -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskShowDetailesClearBtn" time="0.000">
    <skipped/>
  </testcase> <!-- TaskShowDetailesClearBtn -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskDelete" time="0.000">
    <skipped/>
  </testcase> <!-- TaskDelete -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ClosedTask" time="0.000">
    <skipped/>
  </testcase> <!-- ClosedTask -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskClosed" time="0.000">
    <skipped/>
  </testcase> <!-- TaskClosed -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LinkNotice" time="0.000">
    <skipped/>
  </testcase> <!-- LinkNotice -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LinkNoticeViewIcon" time="0.000">
    <skipped/>
  </testcase> <!-- LinkNoticeViewIcon -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LinkNoticeDeleteIcon" time="0.000">
    <skipped/>
  </testcase> <!-- LinkNoticeDeleteIcon -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CloseNotice" time="0.000">
    <skipped/>
  </testcase> <!-- CloseNotice -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CloseCase" time="0.000">
    <skipped/>
  </testcase> <!-- CloseCase -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LinkCase" time="0.000">
    <skipped/>
  </testcase> <!-- LinkCase -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LinkCaseViewIcon" time="0.000">
    <skipped/>
  </testcase> <!-- LinkCaseViewIcon -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeClosedDoc" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeClosedDoc -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeClosedWithoutDoc" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeClosedWithoutDoc -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LinkCaseDeleteIcon" time="0.000">
    <skipped/>
  </testcase> <!-- LinkCaseDeleteIcon -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseClosedDoc" time="0.000">
    <skipped/>
  </testcase> <!-- CaseClosedDoc -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseClosedWithoutDoc" time="0.000">
    <skipped/>
  </testcase> <!-- CaseClosedWithoutDoc -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeDocumentTab" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeDocumentTab -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeWithoutUploadDocument" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeWithoutUploadDocument -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeDocumentSearchFields" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeDocumentSearchFields -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeDocumentShareInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeDocumentShareInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeDocumentShareWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeDocumentShareWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeDocumentShareCloseBtn" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeDocumentShareCloseBtn -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeTaskActivityTab" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeTaskActivityTab -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskActivtityWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- TaskActivtityWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskActivtityResponseWithoutStatus" time="0.000">
    <skipped/>
  </testcase> <!-- TaskActivtityResponseWithoutStatus -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskActivtityExistingData" time="0.000">
    <skipped/>
  </testcase> <!-- TaskActivtityExistingData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskActivtityResponseClearBtn" time="0.000">
    <skipped/>
  </testcase> <!-- TaskActivtityResponseClearBtn -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="TaskActivtityDeleteResponse" time="0.000">
    <skipped/>
  </testcase> <!-- TaskActivtityDeleteResponse -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeResponseTab" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeResponseTab -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ResponseExistingData" time="0.000">
    <skipped/>
  </testcase> <!-- ResponseExistingData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeResponseWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeResponseWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ResponseClearBtn" time="0.000">
    <skipped/>
  </testcase> <!-- ResponseClearBtn -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticePaymentLogTab" time="0.000">
    <skipped/>
  </testcase> <!-- NoticePaymentLogTab -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="PaymentLogwithExistingData" time="0.000">
    <skipped/>
  </testcase> <!-- PaymentLogwithExistingData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticePaymentWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- NoticePaymentWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="PaymentLogwithInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- PaymentLogwithInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeExternalLawyerTab" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeExternalLawyerTab -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ExternalLawyerWithoutRating" time="0.000">
    <skipped/>
  </testcase> <!-- ExternalLawyerWithoutRating -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CriteriaInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- CriteriaInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CriteriaExistingData" time="0.000">
    <skipped/>
  </testcase> <!-- CriteriaExistingData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CriteriaWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- CriteriaWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeAuditLogTab" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeAuditLogTab -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeDocViewandDownload" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeDocViewandDownload -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseDocumentTab" time="0.000">
    <skipped/>
  </testcase> <!-- CaseDocumentTab -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseWithoutUploadDocument" time="0.000">
    <skipped/>
  </testcase> <!-- CaseWithoutUploadDocument -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseDocumentEmptyFields" time="0.000">
    <skipped/>
  </testcase> <!-- CaseDocumentEmptyFields -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseDocumentSearchFields" time="0.000">
    <skipped/>
  </testcase> <!-- CaseDocumentSearchFields -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseDocumentShareInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseDocumentShareInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseDocumentShareWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseDocumentShareWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseDocumentShareCloseBtn" time="0.000">
    <skipped/>
  </testcase> <!-- CaseDocumentShareCloseBtn -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseSendMailWithDoc" time="0.000">
    <skipped/>
  </testcase> <!-- CaseSendMailWithDoc -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseSendMailWithDocInvalidFields" time="0.000">
    <skipped/>
  </testcase> <!-- CaseSendMailWithDocInvalidFields -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseSendMailWithEmptyFields" time="0.000">
    <skipped/>
  </testcase> <!-- CaseSendMailWithEmptyFields -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseUserAssignmentDelete" time="0.000">
    <skipped/>
  </testcase> <!-- CaseUserAssignmentDelete -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseTaskActivityTab" time="0.000">
    <skipped/>
  </testcase> <!-- CaseTaskActivityTab -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseTaskActivityWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseTaskActivityWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseTaskActivtityResponseWithoutStatus" time="0.000">
    <skipped/>
  </testcase> <!-- CaseTaskActivtityResponseWithoutStatus -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseTaskActivtityResponseClearBtn" time="0.000">
    <skipped/>
  </testcase> <!-- CaseTaskActivtityResponseClearBtn -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseHearingTab" time="0.000">
    <skipped/>
  </testcase> <!-- CaseHearingTab -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseWithoutHearingData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseWithoutHearingData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseHearingInvalidDate" time="0.000">
    <skipped/>
  </testcase> <!-- CaseHearingInvalidDate -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseHearingClearBtn" time="0.000">
    <skipped/>
  </testcase> <!-- CaseHearingClearBtn -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseOrderTab" time="0.000">
    <skipped/>
  </testcase> <!-- CaseOrderTab -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseOrderExistingData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseOrderExistingData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseOrderWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseOrderWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseOrderwithClearBtn" time="0.000">
    <skipped/>
  </testcase> <!-- CaseOrderwithClearBtn -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="StatusPayment" time="0.000">
    <skipped/>
  </testcase> <!-- StatusPayment -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="StatusPaymentWithExistingData" time="0.000">
    <skipped/>
  </testcase> <!-- StatusPaymentWithExistingData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="StatusPaymentWithoutdata" time="0.000">
    <skipped/>
  </testcase> <!-- StatusPaymentWithoutdata -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="StatusPaymentwithInvaliddata" time="0.000">
    <skipped/>
  </testcase> <!-- StatusPaymentwithInvaliddata -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseStatusAppealtoNextCourt" time="0.000">
    <skipped/>
  </testcase> <!-- CaseStatusAppealtoNextCourt -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ExternalLawyer" time="0.000">
    <skipped/>
  </testcase> <!-- ExternalLawyer -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseStatuswithEmptyFields" time="0.000">
    <skipped/>
  </testcase> <!-- CaseStatuswithEmptyFields -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseExternalLawyerWitoutRating" time="0.000">
    <skipped/>
  </testcase> <!-- CaseExternalLawyerWitoutRating -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseExternalLawyerCriteria" time="0.000">
    <skipped/>
  </testcase> <!-- CaseExternalLawyerCriteria -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseExistingCriteria" time="0.000">
    <skipped/>
  </testcase> <!-- CaseExistingCriteria -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseCriteriaInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseCriteriaInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseCriteriaWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseCriteriaWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Auditlog" time="0.000">
    <skipped/>
  </testcase> <!-- Auditlog -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseHearing" time="0.000">
    <skipped/>
  </testcase> <!-- CaseHearing -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AdvancedSearchworkspace" time="0.000">
    <skipped/>
  </testcase> <!-- AdvancedSearchworkspace -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="HearingCalender" time="0.000">
    <skipped/>
  </testcase> <!-- HearingCalender -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseNoticeTypeGraph" time="0.000">
    <skipped/>
  </testcase> <!-- CaseNoticeTypeGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseNoticeTypeFilter" time="0.000">
    <skipped/>
  </testcase> <!-- CaseNoticeTypeFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseNoticeStageGraph" time="0.000">
    <skipped/>
  </testcase> <!-- CaseNoticeStageGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseNoticeStageFilter" time="0.000">
    <skipped/>
  </testcase> <!-- CaseNoticeStageFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="RiskSummaryGraph" time="0.000">
    <skipped/>
  </testcase> <!-- RiskSummaryGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="RiskSummaryGraphFilter" time="0.000">
    <skipped/>
  </testcase> <!-- RiskSummaryGraphFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="DepartmentSummaryGraph" time="0.000">
    <skipped/>
  </testcase> <!-- DepartmentSummaryGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="DepartmentSummaryGraphFilter" time="0.000">
    <skipped/>
  </testcase> <!-- DepartmentSummaryGraphFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LocationSummaryGraph" time="0.000">
    <skipped/>
  </testcase> <!-- LocationSummaryGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LocationSummaryGraphFilter" time="0.000">
    <skipped/>
  </testcase> <!-- LocationSummaryGraphFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CategorySummaryGraph" time="0.000">
    <skipped/>
  </testcase> <!-- CategorySummaryGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CategorySummaryGraphFilter" time="0.000">
    <skipped/>
  </testcase> <!-- CategorySummaryGraphFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="InwardDefendantAgeingGraph" time="0.000">
    <skipped/>
  </testcase> <!-- InwardDefendantAgeingGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AgeingGraph1to2years" time="0.000">
    <skipped/>
  </testcase> <!-- AgeingGraph1to2years -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AgeingGraph1to2yearsGraphFilter" time="0.000">
    <skipped/>
  </testcase> <!-- AgeingGraph1to2yearsGraphFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AgeingGraph2to3years" time="0.000">
    <skipped/>
  </testcase> <!-- AgeingGraph2to3years -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AgeingGraph2to3yearsGraphFilter" time="0.000">
    <skipped/>
  </testcase> <!-- AgeingGraph2to3yearsGraphFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AgeingGraphMorethan3years" time="0.000">
    <skipped/>
  </testcase> <!-- AgeingGraphMorethan3years -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseNoticeTypeGraph1" time="0.000">
    <skipped/>
  </testcase> <!-- CaseNoticeTypeGraph1 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseNoticeStageGraph1" time="0.000">
    <skipped/>
  </testcase> <!-- CaseNoticeStageGraph1 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="RiskSummaryGraph1" time="0.000">
    <skipped/>
  </testcase> <!-- RiskSummaryGraph1 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="DepartmentSummaryGraph1" time="0.000">
    <skipped/>
  </testcase> <!-- DepartmentSummaryGraph1 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LocationSummaryGraph1" time="0.000">
    <skipped/>
  </testcase> <!-- LocationSummaryGraph1 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CategorySummaryGraph1" time="0.000">
    <skipped/>
  </testcase> <!-- CategorySummaryGraph1 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ExpensesCaseGraph" time="0.000">
    <skipped/>
  </testcase> <!-- ExpensesCaseGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ExpensesCategoryWiseCaseGraph" time="0.000">
    <skipped/>
  </testcase> <!-- ExpensesCategoryWiseCaseGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ExpensesCounselWiseCaseGraph" time="0.000">
    <skipped/>
  </testcase> <!-- ExpensesCounselWiseCaseGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="UtilizedBudgetGraph" time="0.000">
    <skipped/>
  </testcase> <!-- UtilizedBudgetGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AgeingGraph" time="0.000">
    <skipped/>
  </testcase> <!-- AgeingGraph -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AgeingGraph1to2yearsCase" time="0.000">
    <skipped/>
  </testcase> <!-- AgeingGraph1to2yearsCase -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AgeingGraph2to3yearsCase" time="0.000">
    <skipped/>
  </testcase> <!-- AgeingGraph2to3yearsCase -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AgeingGraphMoreThan3yearsCase" time="0.000">
    <skipped/>
  </testcase> <!-- AgeingGraphMoreThan3yearsCase -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MyDocument" time="0.000">
    <skipped/>
  </testcase> <!-- MyDocument -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ShareCaseDocument" time="0.000">
    <skipped/>
  </testcase> <!-- ShareCaseDocument -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ShareNoticeDocument" time="0.000">
    <skipped/>
  </testcase> <!-- ShareNoticeDocument -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ShareTaskDocument" time="0.000">
    <skipped/>
  </testcase> <!-- ShareTaskDocument -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AdvancedSearchDoc" time="0.000">
    <skipped/>
  </testcase> <!-- AdvancedSearchDoc -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AdvancedSearchShareCaseDocument" time="0.000">
    <skipped/>
  </testcase> <!-- AdvancedSearchShareCaseDocument -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AdvancedSearchShareNoticeDocument" time="0.000">
    <skipped/>
  </testcase> <!-- AdvancedSearchShareNoticeDocument -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AdvancedSearchShareTaskDocument" time="0.000">
    <skipped/>
  </testcase> <!-- AdvancedSearchShareTaskDocument -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CriticalDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- CriticalDocuments -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CriticalDocuments1" time="0.000">
    <skipped/>
  </testcase> <!-- CriticalDocuments1 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MyReports" time="0.000">
    <skipped/>
  </testcase> <!-- MyReports -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AdvancedSearch" time="0.000">
    <skipped/>
  </testcase> <!-- AdvancedSearch -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MoreReports" time="0.000">
    <skipped/>
  </testcase> <!-- MoreReports -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MyReminder" time="0.000">
    <skipped/>
  </testcase> <!-- MyReminder -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ReminderWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- ReminderWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ImportUtility" time="0.000">
    <skipped/>
  </testcase> <!-- ImportUtility -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ImportUtilityWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- ImportUtilityWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ImportUtilityInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- ImportUtilityInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ImportUtilityTwoManadtoryFileds" time="0.000">
    <skipped/>
  </testcase> <!-- ImportUtilityTwoManadtoryFileds -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseUpdationImportUtility" time="0.000">
    <skipped/>
  </testcase> <!-- CaseUpdationImportUtility -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseUpdationUploadEmtyFile" time="0.000">
    <skipped/>
  </testcase> <!-- CaseUpdationUploadEmtyFile -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseUpdationUploadInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseUpdationUploadInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseUpdationUploadInvalidFile" time="0.000">
    <skipped/>
  </testcase> <!-- CaseUpdationUploadInvalidFile -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeUpdation" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeUpdation -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeUpdationUploadEmtyFile" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeUpdationUploadEmtyFile -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeUpdationUploadInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeUpdationUploadInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="NoticeUpdationUploadInvalidFile" time="0.000">
    <skipped/>
  </testcase> <!-- NoticeUpdationUploadInvalidFile -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters" time="0.000">
    <skipped/>
  </testcase> <!-- Masters -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MastersLegalEntity" time="0.000">
    <skipped/>
  </testcase> <!-- MastersLegalEntity -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MastersLegalEntity1" time="0.000">
    <skipped/>
  </testcase> <!-- MastersLegalEntity1 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MastersLegalEntity2" time="0.000">
    <skipped/>
  </testcase> <!-- MastersLegalEntity2 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MastersLegalEntity3" time="0.000">
    <skipped/>
  </testcase> <!-- MastersLegalEntity3 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="UnitEntity" time="0.000">
    <skipped/>
  </testcase> <!-- UnitEntity -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters1" time="0.000">
    <skipped/>
  </testcase> <!-- Masters1 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MastersLawFirm" time="0.000">
    <skipped/>
  </testcase> <!-- MastersLawFirm -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MastersLawFirm1" time="0.000">
    <skipped/>
  </testcase> <!-- MastersLawFirm1 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MastersLawFirm2" time="0.000">
    <skipped/>
  </testcase> <!-- MastersLawFirm2 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="MastersLawFirm3" time="0.000">
    <skipped/>
  </testcase> <!-- MastersLawFirm3 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LawyerWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- LawyerWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LawyerInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- LawyerInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LawyerTwoManadatoryFileds" time="0.000">
    <skipped/>
  </testcase> <!-- LawyerTwoManadatoryFileds -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="LawyerCloseButton" time="0.000">
    <skipped/>
  </testcase> <!-- LawyerCloseButton -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters2" time="0.000">
    <skipped/>
  </testcase> <!-- Masters2 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="UserWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- UserWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="UserInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- UserInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="UserTwoManadatoryFields" time="0.000">
    <skipped/>
  </testcase> <!-- UserTwoManadatoryFields -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="UserCloseButton" time="0.000">
    <skipped/>
  </testcase> <!-- UserCloseButton -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters3" time="0.000">
    <skipped/>
  </testcase> <!-- Masters3 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="OpponentWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- OpponentWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="OpponentInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- OpponentInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="OpponentCloseButton" time="0.000">
    <skipped/>
  </testcase> <!-- OpponentCloseButton -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters4" time="0.000">
    <skipped/>
  </testcase> <!-- Masters4 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CourtWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- CourtWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CourtInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- CourtInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CourtTwomanadatoryFields" time="0.000">
    <skipped/>
  </testcase> <!-- CourtTwomanadatoryFields -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CourtCloseButton" time="0.000">
    <skipped/>
  </testcase> <!-- CourtCloseButton -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters5" time="0.000">
    <skipped/>
  </testcase> <!-- Masters5 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseNoticeTypeWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseNoticeTypeWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseNoticeTypeInvaliData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseNoticeTypeInvaliData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseNoticeTypeCloseBuuton" time="0.000">
    <skipped/>
  </testcase> <!-- CaseNoticeTypeCloseBuuton -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters6" time="0.000">
    <skipped/>
  </testcase> <!-- Masters6 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="PaymentTypeWithouData" time="0.000">
    <skipped/>
  </testcase> <!-- PaymentTypeWithouData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="PaymentTypeInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- PaymentTypeInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="PaymentTypeCloseButton" time="0.000">
    <skipped/>
  </testcase> <!-- PaymentTypeCloseButton -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters7" time="0.000">
    <skipped/>
  </testcase> <!-- Masters7 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="customParameterWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- customParameterWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="customParameterCloseButton" time="0.000">
    <skipped/>
  </testcase> <!-- customParameterCloseButton -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters8" time="0.000">
    <skipped/>
  </testcase> <!-- Masters8 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseStageWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseStageWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseStageInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- CaseStageInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseStageCloseButton" time="0.000">
    <skipped/>
  </testcase> <!-- CaseStageCloseButton -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters9" time="0.000">
    <skipped/>
  </testcase> <!-- Masters9 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="DocumentTypeWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentTypeWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="DocumentTypeInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentTypeInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="DocumentTypeCloseButton" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentTypeCloseButton -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters10" time="0.000">
    <skipped/>
  </testcase> <!-- Masters10 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="RatingCriteriaWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- RatingCriteriaWithoutData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="RatingCriteriaInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- RatingCriteriaInvalidData -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="RatingCriteriaCloseButton" time="0.000">
    <skipped/>
  </testcase> <!-- RatingCriteriaCloseButton -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters11" time="0.000">
    <skipped/>
  </testcase> <!-- Masters11 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="AnnualBudget" time="0.000">
    <skipped/>
  </testcase> <!-- AnnualBudget -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ExistingAnnualBudget" time="0.000">
    <skipped/>
  </testcase> <!-- ExistingAnnualBudget -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="UpdateAnnualBudget" time="0.000">
    <skipped/>
  </testcase> <!-- UpdateAnnualBudget -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="DeleteAnnualBudget" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteAnnualBudget -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters13" time="0.000">
    <skipped/>
  </testcase> <!-- Masters13 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters14" time="0.000">
    <skipped/>
  </testcase> <!-- Masters14 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="Masters15" time="0.000">
    <skipped/>
  </testcase> <!-- Masters15 -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="WorkspaceFilter" time="0.000">
    <skipped/>
  </testcase> <!-- WorkspaceFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="CaseWorkspaceFilter" time="0.000">
    <skipped/>
  </testcase> <!-- CaseWorkspaceFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="WorkspaceTaskFilter" time="0.000">
    <skipped/>
  </testcase> <!-- WorkspaceTaskFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="WorkspaceCaseHearingFilter" time="0.000">
    <skipped/>
  </testcase> <!-- WorkspaceCaseHearingFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="DocumentNoticeFilter" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentNoticeFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="DocumentCaseFilter" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentCaseFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="DocumentTaskFilter" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentTaskFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ReportFilter" time="0.000">
    <skipped/>
  </testcase> <!-- ReportFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ReportCaseFilter" time="0.000">
    <skipped/>
  </testcase> <!-- ReportCaseFilter -->
  <system-out/>
  <testcase classname="litigationCompanyAdmin.CompanyAdmin" name="ReportTaskFilter" time="0.000">
    <skipped/>
  </testcase> <!-- ReportTaskFilter -->
  <system-out/>
</testsuite> <!-- litigationCompanyAdmin.CompanyAdmin -->
